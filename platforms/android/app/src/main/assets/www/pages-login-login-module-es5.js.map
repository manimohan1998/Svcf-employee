{"version":3,"sources":["webpack:///src/app/pages/login/login.page.html","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.scss","webpack:///src/app/pages/login/login.page.ts","webpack:///src/app/services/login.service.ts"],"names":["routes","path","component","LoginPageModule","imports","forChild","declarations","providers","LoginPage","fb","loadingController","router","toast","loginservice","submitted","isLoading","passwordType","passwordIcon","loginForm","group","username","compose","required","password","data","present","credentials","presentToast","user_authentication","subscribe","res","dismiss","user_details","localStorage","setItem","moneycollid","moneycollname","coll_id","coll_name","navigationExtras","state","user1","navigate","error","message","show","console","log","create","then","a","event","which","preventDefault","selector","template","LoginService","http","get","Baseurl","providedIn"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<ion-app>\\n<ion-content fullscreen class=\\\"svcf_page\\\">\\n<section class=\\\"logo_sec\\\" id=\\\"svcf_login\\\">\\n  <img class=\\\"logo\\\" src=\\\"../../../assets/images/logo.png\\\" />\\n  <ion-text>\\n  <h4>SVCF</h4>\\n  </ion-text>\\n</section>\\n<ion-card class=\\\"card_bg\\\">\\n<ion-card-content fullscreen>\\n<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login_values(loginForm.value)\\\" autocomplete=\\\"off\\\">\\n  <ion-list>\\n  <ion-item>\\n  <ion-label position=\\\"stacked\\\">Username</ion-label>\\n  <ion-input formControlName=\\\"username\\\" (keypress)=\\\"CheckSpace($event)\\\" type=\\\"text\\\"\\n  placeholder=\\\"Enter username\\\"></ion-input>\\n  <ion-icon name=\\\"person-outline\\\" slot=\\\"end\\\"></ion-icon>\\n  </ion-item>\\n <ion-item>\\n              <ion-label position=\\\"stacked\\\">Password</ion-label>\\n              <ion-input formControlName=\\\"password\\\" (keypress)=\\\"CheckSpace($event)\\\" [type]=\\\"show ? 'text' : 'password'\\\"\\n                placeholder=\\\"Enter password\\\">\\n              </ion-input>\\n              <div (click)=\\\"show=!show\\\" slot=\\\"end\\\" class=\\\"eye_icon\\\">\\n                <ion-icon name=\\\"eye-off\\\" *ngIf=\\\"!show\\\"></ion-icon>\\n                <ion-icon name=\\\"eye\\\" *ngIf=\\\"show\\\"></ion-icon>\\n              </div>\\n            </ion-item>\\n  <section>\\n    <ion-button expand=\\\"block\\\" [disabled]=\\\"!loginForm.valid\\\" type=\\\"submit\\\" class=\\\"btn\\\"> Sign in</ion-button>\\n  </section>\\n  </ion-list>\\n</form>\\n</ion-card-content>\\n</ion-card>\\n</ion-content>\\n</ion-app>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\nimport { Toast } from '@ionic-native/toast/ngx';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage],\n  providers:[Toast]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { LoginService } from '../../services/login.service';\nimport { Toast } from '@ionic-native/toast/ngx';\nimport { LoadingController, NavController, ModalController, AlertController } from '@ionic/angular';\n@Component({\nselector: 'app-login',\ntemplateUrl: './login.page.html',\nstyleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\nloginForm: FormGroup;\nsubmitted = false;\nisLoading = false;\ncredentials: any;\nusername: any;\npassword: any;\nuser_details: any;\ncoll_id: any;\ncoll_name: any;\npasswordType: string = 'password';\npasswordIcon: string = 'eye-off';\nconstructor(private fb: FormBuilder, public loadingController: LoadingController, private router: Router, private toast: Toast, public loginservice: LoginService) { }\nngOnInit() {\nthis.loginForm = this.fb.group({\nusername: new FormControl('', Validators.compose([\nValidators.required\n])),\npassword: new FormControl('', Validators.compose([\nValidators.required,]))\n});\n}\nlogin_values(data) {\nthis.present();\nthis.credentials = data;\nthis.username = this.credentials['username'];\nthis.password = this.credentials['password'];\nif (this.username == '' || this.username == null || this.password == '' || this.password == null) {\nthis.presentToast('Please Enter Valid Credentials');\n}\nelse {\nthis.loginservice.user_authentication(this.username, this.password).subscribe(res => {\nthis.dismiss();\nthis.presentToast('You have Logged in successfully');\nthis.user_details = res;\nlocalStorage.setItem(\"col_id\", this.user_details[0].moneycollid);\nlocalStorage.setItem(\"col_name\", this.user_details[0].moneycollname);\n\nthis.coll_id = this.user_details[0].moneycollid;\nthis.coll_name = this.user_details[0].moneycollname;\nlet navigationExtras: NavigationExtras = {\nstate: {\n//user: this.coll_id,\nuser1: this.coll_name\n}\n};\nthis.router.navigate(['dashboard'], navigationExtras);\n}, error => {\nthis.dismiss();\nthis.presentToast('Something went wrong');\n//alert('Something went wrong')\n})\n}\n}\nasync presentToast(message) {\nthis.toast.show(message, '2000', 'bottom').subscribe(\ntoast => {\nconsole.log(toast);\n});\n}\nasync present() {\nthis.isLoading = true;\nreturn await this.loadingController.create({\nmessage: 'Logging in,Please wait.....'\n}).then(a => {\na.present().then(() => {\nconsole.log('presented');\nif (!this.isLoading) {\na.dismiss().then(() => console.log('abort presenting'));\n}\n});\n});\n}\nasync dismiss() {\nthis.isLoading = false;\nreturn await this.loadingController.dismiss().then(() => console.log('dismissed'));\n}\nhideShowPassword() {\nthis.passwordType = this.passwordType === 'text' ? 'password' : 'text';\nthis.passwordIcon = this.passwordIcon === 'eye-off' ? 'eye' : 'eye-off';\n}\nCheckSpace(event)\n{\nif(event.which ==32)\n{\nevent.preventDefault();\nreturn false;\n}\n}\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient) { }\n  user_authentication(username,password){\n    return this.http.get(environment.Baseurl+'moneycollectorlogin/username?username='+username +'&Password=' +password)\n\n  }\n}\n"]}